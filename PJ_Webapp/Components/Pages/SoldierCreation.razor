@page "/SoldierCreation"
@using PJ_Webapp.Models
@using PJ_Webapp.Data
@using PJ_Webapp.Models.Enums
@inject DBServices db
@inject UserService session
@rendermode InteractiveServer

@if (session.LoggedInUser != null)
{
    <div id="soldier-creation">
        <h3>Soldier Creation</h3>
        <div id="soldier-basics">
            <h4>Soldier Basics</h4>
            <span>Soldier Name:</span> <input name="name" type="text" @bind="soldierName">
            <br/>
            <span>Race:</span> <select name="race" id="race" @bind="race">
                @foreach (SoldierRace race in Enum.GetValues(typeof(SoldierRace)))
                {
                    <option value="@race">@race.ToCustomString()</option>
                }
            </select>
            <br>
            <span>Loyalty: </span> <select name="loyalty" id="loyalty" @bind="loyalty">
                @foreach (Loyalty loyalty in Enum.GetValues(typeof(Loyalty)))
                {
                    <option value="@loyalty">@loyalty.ToCustomString()</option>
                }
            </select>
            <br>        
        </div>
        <div id="skill-section">
            <h4>Starting Skill Section</h4>
            
            <div id="field-skills">
                 <span>Field Skill 1: </span> 
                 <select name="fSkill1" id="fSkill1" @bind="fSkill1">
                     
                     @foreach (SoldierSkill fSkill in Enum.GetValues(typeof(SoldierSkill)))
                     {
                         if (fSkill.GetCategory() == "Field Skills")
                         { <option value="@fSkill">@fSkill.ToCustomString()</option> }
                         
                     }
                 </select>
                 
                    <span>Field Skill 2: </span> 
                    <select name="fSkill2" id="fSkill2" @bind="fSkill2">
                     @foreach (SoldierSkill fSkill in Enum.GetValues(typeof(SoldierSkill)))
                     {
                         if (fSkill.GetCategory() == "Field Skills")
                         { <option value="@fSkill">@fSkill.ToCustomString()</option> }
                     }
                    </select>            
            </div>
            <br>
                <div id="artisan-skills">
                     <span>Artisan Skill 1: </span> 
                     <select name="aSkill1" id="aSkill1" @bind="aSkill1">
                         
                         @foreach (SoldierSkill fSkill in Enum.GetValues(typeof(SoldierSkill)))
                         {
                             if (fSkill.GetCategory() == "Artisan Skills")
                             { <option value="@fSkill">@fSkill.ToCustomString()</option> }
                             
                         }
                     </select>
                     
                        <span>Artisan Skill 2: </span> 
                        <select name="aSkill2" id="aSkill2" @bind="aSkill2">
                         @foreach (SoldierSkill fSkill in Enum.GetValues(typeof(SoldierSkill)))
                         {
                             if (fSkill.GetCategory() == "Artisan Skills")
                             { <option value="@fSkill">@fSkill.ToCustomString()</option> }
                         }
                        </select>            
                </div>

        </div>
        <button @onclick="CreateSoldier">Save Soldier</button>
    </div>
}
else
{
    <h1>You are not logged in!</h1>
    <LoginWindow></LoginWindow>
}

<div id="debug-section">
    <br>
    <br/>
    <br>
    <br>
    <span>debug mode</span> <input type="checkbox" @bind="debug_mode">
    @if (debug_mode)
    {
        <div>
            <h2>Debug</h2>
            <p>PlayerId Override</p>
            <input type="text" @bind="playerID">

            <h2>Last Soldier</h2>
            @if (lastSoldierMade != null)
            {
                <p>@lastSoldierMade.name</p>
            }
        </div>
    }


</div>
@code {

    // Debug/Session info;
    int playerID; //TODO Grab player ID from login session
    Soldier lastSoldierMade = null;
    bool debug_mode;

    //Form binds
    string soldierName;
    SoldierRace race;
    Loyalty loyalty;
    SoldierSkill aSkill1; //This isn't pretty but a Blazor constraint (afaik)
    SoldierSkill aSkill2;
    SoldierSkill fSkill1;
    SoldierSkill fSkill2;


    private void CreateSoldier()
    {
        bool formFilled = soldierName != null && playerID != null && aSkill1 != null && aSkill2 != null;
        if (formFilled)
        {
            Soldier newSoldier = new Soldier(soldierName, race, loyalty);
            InitializeSkills(newSoldier);
            
            newSoldier.playerId = session.LoggedInUser.userID;
            session.LoggedInUser.soldiers.Add(newSoldier);
            
            db.SaveData(newSoldier);
            //Positive feedback to player regarding soldier creation
        }
        else
        {
            //Dialogue box stating they need to fill the entire form out
        }


    }

    private void InitializeSkills(Soldier newSoldier)
    {
        bool skillsNotNull = aSkill1 != null && aSkill2 != null && fSkill1 != null && fSkill2 != null;
        if (skillsNotNull)
        {
            SoldierSkill[] skillsToConvert = [aSkill1, aSkill2, fSkill1, fSkill2];
            foreach (SoldierSkill skillName in skillsToConvert)
            {
                Skill skill = new Skill(skillName);
                newSoldier.InitializeSkill(skill);

            }
        }
    }
}