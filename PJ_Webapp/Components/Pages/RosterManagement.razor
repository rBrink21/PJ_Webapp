@page "/RosterManagement"
@using PJ_Webapp.Data
@using PJ_Webapp.Models
@using PJ_Webapp.Models.Enums
@inject DBServices db
@rendermode InteractiveServer
<link rel="stylesheet" href="site.css"/>
<h3>Roster Management</h3>
@foreach (Soldier soldier in db.GetSoldiers())
{
    if (soldier == null) { return;}
    <div class="soldier-element">
        
        <h4>Soldier information</h4>
        <p>Name: @soldier.name</p>
        <p>Loyalty: @soldier.loyalty.ToCustomString()</p>
        <p>Class: UNINPLEMENTED</p>
        <p>Race: @soldier.soldierRace.ToCustomString()</p>

        <h5>Status</h5>
        <p>Level : UNIMPLEMENTED</p>
        <p>Health: UNIMPLEMENTED</p>

        <h5>Skills:</h5>

        @foreach (Skill skill in soldier.skills)
        {
            <span>@skill.name.ToCustomString()</span>
            <span>@skill.level</span>
            <br/>
        }
        <h5>Management:</h5>
        <button @onclick="() => SelectSoldier(soldier)">Select</button>
        <button @onclick="() => { Console.WriteLine(soldier.name); DeleteSoldier(soldier); }">Delete Soldier</button>

    </div>
}

@if (selectedSoldier != null)
{
    <div id="selection-screen">
        <h3>@selectedSoldier.name</h3>
        <button @onclick="() => {selectedSoldier = null; }" class="exit-button"><b>X</b></button>
        <div id="selected-vitals">
            <h5> <b>Vitals</b></h5>
            <span>Level: @selectedSoldier.level</span>
            <span>Health: @selectedSoldier.health</span>
        </div>
        <div id="selected-skills">
            <h5><b>Skills</b></h5>
            @foreach (Skill skill in selectedSoldier.skills)
            {
                <p>@skill.name.ToCustomString() : @skill.level</p>
            }
        </div>
        <div id="Functions">
            <h5><b>Functions</b></h5>
            <button @onclick="() => {selectedSoldier.LevelUp();}">Level up</button>
        </div>
    </div>
}
    
@code {
    //TODO grab playerId from session
    public int playerId = 1;
    Soldier selectedSoldier = null;

    private void SelectSoldier(Soldier soldier)
    {
        if (selectedSoldier != null)
        {
            selectedSoldier = null;
        }
        else
        {
            selectedSoldier = soldier;
        }
    }
    
    private void DeleteSoldier(Soldier soldier)
    {
        db.DeleteSoldier(soldier);
        StateHasChanged();

        if (selectedSoldier == soldier)
        {
            selectedSoldier = null;
        }
    }
    
}